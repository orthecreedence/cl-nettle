(in-package :nettle.accessors)

(defmacro make-accessors (c-struct)
  `(progn
     ,@(loop for slot-name in (foreign-slot-names `(:struct ,(intern (string c-struct) :nettle)))
             for accessor-name = (intern (concatenate 'string (symbol-name c-struct)
                                                      "-"
                                                      (symbol-name slot-name)))
             append (list `(defmacro ,accessor-name (ptr)
                             (list 'foreign-slot-value ptr '(le::cffi-type ,(intern (string c-struct) :nettle)) '',slot-name))
                          `(export ',accessor-name :nettle.accessors)))))

(make-accessors #.(nettle::lispify "aes_ctx" 'classname))
(make-accessors #.(nettle::lispify "arcfour_ctx" 'classname))
(make-accessors #.(nettle::lispify "arctwo_ctx" 'classname))
(make-accessors #.(nettle::lispify "asn1_der_iterator" 'classname))
(make-accessors #.(nettle::lispify "base16_decode_ctx" 'classname))
(make-accessors #.(nettle::lispify "base64_encode_ctx" 'classname))
(make-accessors #.(nettle::lispify "base64_decode_ctx" 'classname))
(make-accessors #.(nettle::lispify "blowfish_ctx" 'classname))
(make-accessors #.(nettle::lispify "nettle_buffer" 'classname))
(make-accessors #.(nettle::lispify "camellia_ctx" 'classname))
(make-accessors #.(nettle::lispify "cast128_ctx" 'classname))
(make-accessors #.(nettle::lispify "des_ctx" 'classname))
(make-accessors #.(nettle::lispify "des3_ctx" 'classname))
(make-accessors #.(nettle::lispify "dsa_public_key" 'classname))
(make-accessors #.(nettle::lispify "dsa_private_key" 'classname))
(make-accessors #.(nettle::lispify "dsa_signature" 'classname))
(make-accessors #.(nettle::lispify "ecc_point" 'classname))
(make-accessors #.(nettle::lispify "ecc_scalar" 'classname))
(make-accessors #.(nettle::lispify "gcm_key" 'classname))
(make-accessors #.(nettle::lispify "gcm_ctx" 'classname))
(make-accessors #.(nettle::lispify "gcm_aes_ctx" 'classname))
(make-accessors #.(nettle::lispify "gosthash94_ctx" 'classname))
(make-accessors #.(nettle::lispify "hmac_md5_ctx" 'classname))
(make-accessors #.(nettle::lispify "hmac_ripemd160_ctx" 'classname))
(make-accessors #.(nettle::lispify "hmac_sha1_ctx" 'classname))
(make-accessors #.(nettle::lispify "hmac_sha256_ctx" 'classname))
(make-accessors #.(nettle::lispify "hmac_sha512_ctx" 'classname))
(make-accessors #.(nettle::lispify "knuth_lfib_ctx" 'classname))
(make-accessors #.(nettle::lispify "md2_ctx" 'classname))
(make-accessors #.(nettle::lispify "md4_ctx" 'classname))
(make-accessors #.(nettle::lispify "md5_ctx" 'classname))
(make-accessors #.(nettle::lispify "nettle_cipher" 'classname))
(make-accessors #.(nettle::lispify "nettle_hash" 'classname))
(make-accessors #.(nettle::lispify "nettle_armor" 'classname))
(make-accessors #.(nettle::lispify "ripemd160_ctx" 'classname))
(make-accessors #.(nettle::lispify "rsa_public_key" 'classname))
(make-accessors #.(nettle::lispify "rsa_private_key" 'classname))
(make-accessors #.(nettle::lispify "R_RSA_PUBLIC_KEY" 'classname))
(make-accessors #.(nettle::lispify "R_RSA_PRIVATE_KEY" 'classname))
(make-accessors #.(nettle::lispify "R_SIGNATURE_CTX" 'classname))
(make-accessors #.(nettle::lispify "salsa20_ctx" 'classname))
(make-accessors #.(nettle::lispify "serpent_ctx" 'classname))
(make-accessors #.(nettle::lispify "sexp_iterator" 'classname))
(make-accessors #.(nettle::lispify "sha1_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha256_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha512_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha3_state" 'classname))
(make-accessors #.(nettle::lispify "sha3_224_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha3_256_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha3_384_ctx" 'classname))
(make-accessors #.(nettle::lispify "sha3_512_ctx" 'classname))
(make-accessors #.(nettle::lispify "twofish_ctx" 'classname))
(make-accessors #.(nettle::lispify "umac32_ctx" 'classname))
(make-accessors #.(nettle::lispify "umac64_ctx" 'classname))
(make-accessors #.(nettle::lispify "umac96_ctx" 'classname))
(make-accessors #.(nettle::lispify "umac128_ctx" 'classname))
(make-accessors #.(nettle::lispify "yarrow_source" 'classname))
(make-accessors #.(nettle::lispify "yarrow256_ctx" 'classname))
(make-accessors #.(nettle::lispify "yarrow_key_event_ctx" 'classname))
